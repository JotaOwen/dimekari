S = require 'string'
class Shout
  constructor: (Taringa) ->
    @taringa = Taringa

  add: (msg, type = 0, privacy = 0, attachment = '') ->
    self = @
    console.log attachment, type
    @taringa.request.post 'http://www.taringa.net/ajax/shout/add', { form:
      key: self.taringa.user_key
      attachment: attachment
      attachment_type: type
      privacy: privacy
      body: msg }, (error, response, body) ->
        if !error and response.statusCode is 200
          try
            data = JSON.parse(body)
            if data.status is 0
              self.taringa.log('Shout::add -> ' + S(data.data).decodeHTMLEntities().stripTags().s)
          catch e
            self.taringa.log 'Shout::add -> Shout realizado'
        else
          self.taringa.log 'Shout::add -> Request was not succesful'

  add_comment: (comment, obj_id, obj_owner, obj_type) ->
    self = @
    @taringa.request.post 'http://www.taringa.net/ajax/comments/add', { form:
      key: self.taringa.user_key
      comment: comment
      objectId: obj_id
      objectOwner: obj_owner
      objectType: obj_type
      show:'true'}, (error, response, body) ->
        if !error and response.statusCode is 200
          try
            data = JSON.parse(body)
            if data.status is 0
              self.taringa.log('Shout::add_comment -> ' + S(data.data).decodeHTMLEntities().stripTags().s)
          catch error
            self.taringa.log 'Shout::add_comment -> Shout comentado'
        else
          self.taringa.log 'Shout::add_comment -> Request was not succesful'

  add_reply_comment: (comment, obj_id, obj_type, parent) ->
    self = @
    @taringa.request.post 'http://www.taringa.net/serv/comment/addReply/' + obj_id + '.' + parent, { form:
      key: self.taringa.user_key
      body: comment
      object_type: obj_type}, (error, response, body) ->
        if !error and response.statusCode is 200
          try
            data = JSON.parse(body)
            if data.status is 0
              self.taringa.log('Shout::add_reply_comment -> ' + S(data.data).decodeHTMLEntities().stripTags().s)
          catch error
            self.taringa.log 'Shout::add_reply_comment -> Respuesta a un comentario en un shout realizada'
        else
          self.taringa.log 'Shout::add_reply_comment -> Request was not succesful'

  like: (id, owner_id) ->
    self = @
    @taringa.request.post 'http://www.taringa.net/ajax/shout/vote', { form:
      key: self.taringa.user_key
      owner: owner_id
      uuid: id
      score: 1 }, (error, response, body) ->
        if !error and response.statusCode is 200
          data = JSON.parse(body)
          if data.status is 0
            tmp = S(data.data).decodeHTMLEntities().stripTags().s
            if tmp is "El autor del shout te ha bloqueado, portate bien"
              self.taringa.user.unfollow owner_id
            self.taringa.log('Shout::like -> ' + tmp)
        else
          self.taringa.log 'Shout::like -> Request was not succesful'

  fav: (id, owner_id) ->
    self = @
    @taringa.request.post 'http://www.taringa.net/ajax/shout/favorite-add', { form:
      key: self.taringa.user_key
      owner: owner_id
      uuid: id}, (error, response, body) ->
        if !error and response.statusCode is 200
          data = JSON.parse(body)
          if data.status is 0
            tmp = S(data.data).decodeHTMLEntities().stripTags().s
            self.taringa.log('Shout::like -> ' + tmp)
        else
          self.taringa.log 'Shout::like -> Request was not succesful'

  get_object: (shout_id, callback) ->
    self = @
    @taringa.request 'http://api.taringa.net/shout/view/' + shout_id, (error, response, body) ->
      if !error and response.statusCode is 200
        data = JSON.parse(body)
        callback.call this, false, data
      else
        callback.call this, 'Shout::get_object -> Request was not succesful'

  get_replies_comment: (comment_id, obj_id, obj_owner, obj_type, callback) ->
    self = @
    @taringa.request.post 'http://www.taringa.net/ajax/comments/get-replies', { form:
      key: self.taringa.user_key
      objectType: obj_type
      objectId: obj_id
      objectOwner: obj_owner
      commentId: comment_id
      page: '-200' }, (error, response, body) ->
        if !error and response.statusCode is 200
          data = JSON.parse(body)
          callback.call this, false, data
        else
          callback.call this, 'Shout::get_replies_comment -> Request was not succesful'

  get_signature_comment: (comment_id, obj_id, obj_type, callback) ->
    self = @
    @taringa.request.post 'http://www.taringa.net/ajax/comments/get', { form:
      key: self.taringa.user_key
      objectType: obj_type
      objectId: obj_id
      commentId: comment_id}, (error, response, body) ->
        if !error and response.statusCode is 200
          pattern = /<div class=\"comment clearfix(?:.*?)\" data-id="(?:\d+)"(?:.*?)data-signature=\"(.*?)\"/
          match = pattern.exec body
          if match? and match.length > 0
            callback.call this, false, match[1]
          else
            callback.call this, 'Shout::get_signature_comment -> Signature not found'
        else
          callback.call this, 'Shout::get_signature_comment -> Request was not succesful'


module.exports = Shout
